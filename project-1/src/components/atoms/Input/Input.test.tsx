import React from 'react'
import '@testing-library/jest-dom'
import { render } from '@testing-library/react'
import Input from './Input'

describe('Input', () => {
  it('renders correctly', () => {
    const component = render(<Input id={'test-input'} name={'testing'} type={'text'} />)
    expect(component.container.querySelector('input[id="test-input"]')).toBeInTheDocument()
  })

  it('renders correct html input type', () => {
    let component = render(<Input id={'test-input'} name={'testing'} type={'button'} />)
    expect(component.container.querySelector('input[type="button"]')).toBeInTheDocument()
    component = render(<Input id={'test-input'} name={'testing'} type={'checkbox'} />)
    expect(component.container.querySelector('input[type="checkbox"]')).toBeInTheDocument()
    component = render(<Input id={'test-input'} name={'testing'} type={'color'} />)
    expect(component.container.querySelector('input[type="color"]')).toBeInTheDocument()
    component = render(<Input id={'test-input'} name={'testing'} type={'date'} />)
    expect(component.container.querySelector('input[type="date"]')).toBeInTheDocument()
    component = render(<Input id={'test-input'} name={'testing'} type={'datetime-local'} />)
    expect(component.container.querySelector('input[type="datetime-local"]')).toBeInTheDocument()
    component = render(<Input id={'test-input'} name={'testing'} type={'email'} />)
    expect(component.container.querySelector('input[type="email"]')).toBeInTheDocument()
    component = render(<Input id={'test-input'} name={'testing'} type={'file'} />)
    expect(component.container.querySelector('input[type="file"]')).toBeInTheDocument()
    component = render(<Input id={'test-input'} name={'testing'} type={'hidden'} />)
    expect(component.container.querySelector('input[type="hidden"]')).toBeInTheDocument()
    component = render(<Input id={'test-input'} name={'testing'} type={'image'} />)
    expect(component.container.querySelector('input[type="image"]')).toBeInTheDocument()
    component = render(<Input id={'test-input'} name={'testing'} type={'month'} />)
    expect(component.container.querySelector('input[type="month"]')).toBeInTheDocument()
    component = render(<Input id={'test-input'} name={'testing'} type={'number'} />)
    expect(component.container.querySelector('input[type="number"]')).toBeInTheDocument()
    component = render(<Input id={'test-input'} name={'testing'} type={'password'} />)
    expect(component.container.querySelector('input[type="password"]')).toBeInTheDocument()
    component = render(<Input id={'test-input'} name={'testing'} type={'radio'} />)
    expect(component.container.querySelector('input[type="radio"]')).toBeInTheDocument()
    component = render(<Input id={'test-input'} name={'testing'} type={'range'} />)
    expect(component.container.querySelector('input[type="range"]')).toBeInTheDocument()
    component = render(<Input id={'test-input'} name={'testing'} type={'reset'} />)
    expect(component.container.querySelector('input[type="reset"]')).toBeInTheDocument()
    component = render(<Input id={'test-input'} name={'testing'} type={'search'} />)
    expect(component.container.querySelector('input[type="search"]')).toBeInTheDocument()
    component = render(<Input id={'test-input'} name={'testing'} type={'submit'} />)
    expect(component.container.querySelector('input[type="submit"]')).toBeInTheDocument()
    component = render(<Input id={'test-input'} name={'testing'} type={'tel'} />)
    expect(component.container.querySelector('input[type="tel"]')).toBeInTheDocument()
    component = render(<Input id={'test-input'} name={'testing'} type={'text'} />)
    expect(component.container.querySelector('input[type="text"]')).toBeInTheDocument()
    component = render(<Input id={'test-input'} name={'testing'} type={'time'} />)
    expect(component.container.querySelector('input[type="time"]')).toBeInTheDocument()
    component = render(<Input id={'test-input'} name={'testing'} type={'url'} />)
    expect(component.container.querySelector('input[type="url"]')).toBeInTheDocument()
    component = render(<Input id={'test-input'} name={'testing'} type={'week'} />)
    expect(component.container.querySelector('input[type="week"]')).toBeInTheDocument()
  })
})
